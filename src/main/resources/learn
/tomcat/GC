垃圾回收实现原理
1.引用计数法 (Reference Counting) (A对象，任何对象引用A,计数器加1 引用失效减1，为0时则GC回收) 
    不能循环标记（A,B A包含B,B包含A，没有第三个对象引用A B 记数为0，GC回收会造成内存泄露）
2.标记-清除法 (Mark-Sweep) (从根节点遍历标记较大的对象，未被标记的为垃圾对象，GC回收)
    导致内存空间不连续，效率低于连续的内存空间
3.复制算法 (Copying) (将内存分为2块，GC回收时把正在使用的对象复制到未使用的对象中，然后清除使用对象中的垃圾对象)
    如果系统中老年代对象很多，存活的对象大复制效率低
4.标记-压缩算法 (Mark-Compact)(从根节点遍历，把存活的对象标记 然后压缩在内存的一段，之后清理边界外所有内存空间)
5.增量算法 (Incremental Collecting)（边运行程序边收集垃圾）
    线程上下文切换，增加消耗，造成系统吞吐量下降
6.分代 （根据不同的需求，使用不同的回收算法）
