一.JVM环境创建
1.创建JVM环境和配置
2.装载JVM.dll
3.初始化JVM.dll并挂界到JNIENV(JNI调用接口)
4.调用JNIEnv实例装载并处理class类
二.JVM执行过程
1.加载class文件
2.分配管理内存
3.执行垃圾收集
三.JVM生命周期
1.启动 （启动一个java程序，一个JVM就产生了，任何拥有main函数的都可作为jvm的起点）
2.运行 （main作为程序初始线程的起点，任何线程都有main函数启动，）
3.消亡 （当程序中所有非守护线程都消亡时，jvm才推出）
四.JVM运行时数据区
1.CPU寄存区
    存储每个线程下一步要执行的JVM指令，如果改方法为native方法，则不存储任何信息
2.JVM栈
    jvm栈用来存放当前线程的局部基本类型的变量(long,int,boolean, char,short,float,double,byte)
    非基本类型的对象在栈中仅存放一个指向堆上的地址
3.JVM堆
    存储对象实例以及数组值，通过new创建的对象都存放在堆中（所有线程共享）
    JVM为了提升对象内存的分配效率，为每一个线程都分配了一块独立的空间TLAB（Thread Local Allocation Buffer）线程本地分配缓冲区
4.方法区
    存放所有加载类的信息（name,修饰符等）当调用getNmae()时，这些方法都重方法区获得（全局共享）
5.运行时常量池
    存放类中固定的常量信息，方法和file引用信息等，空间从方法区域分配
6.本地方法堆栈
    JVM采用本地方法堆栈支持native方法执行，用于存储每个native方法调用的状态

JVM堆分为3部分eden和2个survivor（form和to）区
    新创建的对象存在eden区，经过一次minor GC后仍然存活的，被移到survivor区 对象在survivor区每经历一次minor GC 年龄就增加一岁
    达到一定程度就会被移到老年代

年轻代采用（复制算法）




